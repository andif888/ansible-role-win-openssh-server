---
# tasks file for ansible-role-win-openssh
- name: ansible-role-win-openssh-server - Check WindowsCapability
  win_shell: |
    $installed = $false
    $cap = get-windowscapability -online | ? Name -like '{{ win_capability_openssh_server }}'
   
    if ($cap) {
      if ($cap.State -eq [Microsoft.Dism.Commands.PackageFeatureState]::Installed) {
         $installed = $true
      }    
    }
    Write-Host $installed
  register: opensshserver_installed
  changed_when: False

- name: ansible-role-win-openssh-server - Install WindowsCapability OpenSSH Server
  win_shell: |
    Add-WindowsCapability -Online -Name '{{ win_capability_openssh_server }}'
  when: 
    - opensshserver_installed.stdout is match("False*")
  register: opensshserver_status

- name: ansible-role-win-openssh-server - Start sshd service
  win_service:
    name: sshd
    start_mode: auto
    state: started

- name: ansible-role-win-openssh-server - Firewall rule to allow SSH on TCP port 22
  win_firewall_rule:
    name: OpenSSH SSH Server (sshd)
    localport: 22
    action: allow
    direction: in
    program: '%SystemRoot%\system32\OpenSSH\sshd.exe'
    protocol: tcp
    state: present
    enabled: yes

- name: set the default shell to CMD
  win_regedit:
    path: HKLM:\SOFTWARE\OpenSSH
    name: DefaultShell
    state: absent
  when: win_open_ssh_server_shell_powershell == false

- name: copy administrators_authorized_keys to programdata
  win_copy:
    src: '{{ win_open_ssh_server_administrators_authorized_keys }}'
    dest: '{{ ansible_env.ProgramData }}\ssh\administrators_authorized_keys'
  when: win_open_ssh_server_set_administrators_authorized_keys

- name: Disable ACL Inheritance on administrators_authorized_keys in programdata
  win_acl_inheritance:
    path: '{{ ansible_env.ProgramData }}\ssh\administrators_authorized_keys'
    reorganize: yes
    state: absent
  when: win_open_ssh_server_set_administrators_authorized_keys

- name: Get local admin group name
  win_shell: |
    $admins = ([System.Security.Principal.SecurityIdentifier]'S-1-5-32-544').Translate( [System.Security.Principal.NTAccount]).Value
    write-host $admins
  register: localadmin_result
  changed_when: false
  when: win_open_ssh_server_set_administrators_authorized_keys

- name: ACL FullControl for Administrators on administrators_authorized_keys
  win_acl:
    path: '{{ ansible_env.ProgramData }}\ssh\administrators_authorized_keys'
    user: '{{ localadmin_result.stdout | trim }}'
    rights: FullControl
    type: allow
    state: present
  when: win_open_ssh_server_set_administrators_authorized_keys

- name: ACL FullControl for SYSTEM on administrators_authorized_keys
  win_acl:
    path: '{{ ansible_env.ProgramData }}\ssh\administrators_authorized_keys'
    user: SYSTEM
    rights: FullControl
    type: allow
    state: present
  when: win_open_ssh_server_set_administrators_authorized_keys

# - name: acl on authorized_keys in programdata
#   win_shell: |
#     $acl = Get-Acl C:\ProgramData\ssh\administrators_authorized_keys
#     $acl.SetAccessRuleProtection($true, $false)
#     $administratorsRule = New-Object system.security.accesscontrol.filesystemaccessrule("Administrators","FullControl","Allow")
#     $systemRule = New-Object system.security.accesscontrol.filesystemaccessrule("SYSTEM","FullControl","Allow")
#     $acl.SetAccessRule($administratorsRule)
#     $acl.SetAccessRule($systemRule)
#     $acl | Set-Acl
#   when: win_open_ssh_server_set_administrators_authorized_key
